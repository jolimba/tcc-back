openapi: 3.0.0
info:
  title: An unnamed work
  description: |-
    https://editor.swagger.io/?_ga=2.123513611.1880996912.1659936114-46167596.1659936114
  contact:
    email: do_later@gmail.com
  version: 0.0.1
servers:
  - url: maybe
tags:
  - name: users
    description: Operations about user
  - name: login
    description: Access to system
paths:
  /users:
    post:
      tags:
        - users
      summary: Register a new user
      description: Create an account for a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - user_auth:
            - write:users
    get:
      tags:
        - users
      summary: Search all users
      description: Search all users registered in the system
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - user_auth:
            - read:users
  /users/{user_id}:
    get:
      tags:
        - users
      summary: Search for a specific user
      description: Search for a specific user using user_id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - user_auth:
            - write:users
    put:
      tags:
        - users
      summary: Update an existing user
      description: Update an existing user by Id
      operationId: updatePet
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - user_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - users
      summary: Remove for a specific user
      description: Remove for a specific user using user_id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - user_auth:
            - remove:users
  /login:
    post:
      tags:
        - login
      summary: Remove for a specific user
      description: Remove for a specific user using user_id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
        - user_auth:
            - read:users
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        loginUser:
          type: string
          example: theUser
        name:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        birthDate:
          type: string
          example: '14/06/1989'
    Login:
      type: object
      properties:
        user:
          type: string
          example: 'JohnUser'
        password:
          type: string
          example: '12345'
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
    LoginArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Login'
  securitySchemes:
    user_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:users: modify users in your account
            read:users: read your usersp
            remove:users: remove an user
    api_key:
      type: apiKey
      name: api_key
      in: header